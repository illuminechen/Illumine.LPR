<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Illumine.LPR">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Texts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.Margin" Value="5 10"/>
    </Style>
    <Style x:Key="Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Control.Background" Value="{StaticResource WordLightBlueBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
    </Style>
    <Style x:Key="Secondary" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.Foreground" Value="{StaticResource WordLightBlueBrush}"/>
    </Style>
    <Style x:Key="Hoverless" TargetType="{x:Type Button}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SystemIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="true"/>
        <Setter Property="Control.Padding" Value="10"/>
    </Style>
    <Style x:Key="WindowControlButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="true"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.Padding" Value="8"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Setter Property="FrameworkElement.LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                       Text="{TemplateBinding ContentControl.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowCloseButton" TargetType="{x:Type Button}"
         BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="Red"/>
                <Setter Property="Control.Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RegularButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.Margin" Value="0 10"/>
        <Setter Property="local:IsBusyProperty.Value" Value="False"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <TextBlock x:Name="contentPresenter" Text="{TemplateBinding ContentControl.Content}"
                         FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                         Focusable="false" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         Margin="{TemplateBinding Control.Padding}"
                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                         Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"/>
                            <TextBlock Style="{StaticResource SpinningText}"
                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                         Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource ForegroundDarkBrush}" Property="Border.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Control.Padding" Value="50 10"/>
        <Setter Property="FrameworkElement.Margin" Value="0 10"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <TextBlock x:Name="contentPresenter" Text="{TemplateBinding ContentControl.Content}"
                       FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                       Focusable="false" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       Margin="{TemplateBinding Control.Padding}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                       VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{StaticResource ForegroundDarkBrush}" Property="Control.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Control.Background" Value="{StaticResource WordTransparentBlueBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource FontAwesome5}"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding ContentControl.Content}" Focusable="false"
                           FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                           Margin="{TemplateBinding Control.Padding}"
                           SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                           VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                            </Viewbox>
                            <TextBlock Grid.Row="1" Foreground="{StaticResource ForegroundVeryDarkBrush}" HorizontalAlignment="Center"
                         Text="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordLightBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordTransparentBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource ForegroundDarkBrush}" Property="Border.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconGrowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Control.Background" Value="{StaticResource WordTransparentBlueBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="Control.Padding" Value="30"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="FrameworkElement.Width"
            Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <UIElement.RenderTransform>
                            <ScaleTransform/>
                        </UIElement.RenderTransform>
                        <UIElement.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </UIElement.RenderTransformOrigin>
                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding ContentControl.Content}" Focusable="false"
                           FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                           Margin="{TemplateBinding Control.Padding}"
                           SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                           VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border"
                                   Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"/>
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border"
                                   Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border"
                                   Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"/>
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border"
                                   Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource ForegroundDarkBrush}" Property="Border.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButton" TargetType="{x:Type Button}" BasedOn="{ StaticResource BaseStyle}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button},Path=ActualHeight,Converter={local:HalfConverter}}"/>
            </Style>
        </Style.Resources>
        <Setter Property="Control.Background" Value="{StaticResource WordBlueBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
    </Style>
    <Style x:Key="RoundIconButton" TargetType="{x:Type Button}" BasedOn="{ StaticResource RoundButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            Padding="5"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding ContentControl.Content}" 
                                           Focusable="false"
                                           FontFamily="{TemplateBinding Control.FontFamily}" 
                                           FontSize="{TemplateBinding Control.FontSize}"
                                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                           Margin="{TemplateBinding Control.Padding}"
                                           SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                           VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordLightBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Duration="0:0:0.3" Storyboard.TargetName="border"
                                  Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="border" Value="{StaticResource ForegroundDarkBrush}" Property="Border.Background"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>