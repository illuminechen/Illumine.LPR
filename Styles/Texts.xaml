<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Illumine.LPR">
  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.FontSize" Value="{StaticResource FontSizeLarge}"/>
    <Setter Property="TextBlock.FontFamily" Value="{StaticResource LatoThin}"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
  </Style>
  <Style TargetType="{x:Type TextBox}">
    <Setter Property="Control.FontSize" Value="{StaticResource FontSizeLarge}"/>
    <Setter Property="Control.FontFamily" Value="{StaticResource LatoThin}"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
  </Style>
  <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundMainBrush}"/>
    <Setter Property="TextBlock.FontFamily" Value="{StaticResource LatoBold}"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="TextBlock.FontSize" Value="{StaticResource FontSizeXXLarge}"/>
    <Setter Property="FrameworkElement.Margin" Value="0 6"/>
  </Style>
  <Style x:Key="BaseTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.FontSize" Value="{StaticResource FontSizeXLarge}"/>
  </Style>
  <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
    <Setter Property="Control.FontSize" Value="{StaticResource FontSizeXXLarge}"/>
    <Setter Property="Control.FontFamily" Value="{StaticResource LatoBold}"/>
    <Setter Property="Control.Padding" Value="10"/>
    <Setter Property="FrameworkElement.Margin" Value="0 5 0 5"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource WordBlueBrush}"/>
    <Setter Property="Control.BorderThickness" Value="0 0 0 1"/>
    <Setter Property="Control.Background" Value="{StaticResource ForegroundWhiteBrush}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Grid>
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <TextBlock x:Name="placeholder" IsHitTestVisible="false" Text="{TemplateBinding FrameworkElement.Tag}"
                       FontFamily="{StaticResource LatoThin}" Padding="{TemplateBinding Control.Padding}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
                       Foreground="{StaticResource ForegroundDarkBrush}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </TextBlock>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF569DE5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SpinningText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
    <Setter Property="TextBlock.FontFamily" Value="{StaticResource FontAwesome}"/>
    <Setter Property="TextBlock.Text" Value=""/>
    <Setter Property="UIElement.RenderTransformOrigin" Value="0.5 0.5"/>
    <Setter Property="UIElement.RenderTransform">
      <Setter.Value>
        <RotateTransform/>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <Storyboard x:Key="Spin">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360"
                         Duration="0:0:2" RepeatBehavior="Forever"/>
      </Storyboard>
    </Style.Resources>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard x:Name="SpinStoryBoard" Storyboard="{StaticResource Spin}"/>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <RemoveStoryboard BeginStoryboardName="SpinStoryBoard"/>
        </TriggerBase.ExitActions>
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>